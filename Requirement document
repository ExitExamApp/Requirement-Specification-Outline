Software Requirements Specification

For 

EEprep
Exit Exam Preparation Application

Version 1.1



Prepared by: Abdullah Alathel, Charith Perera, Christopher Gborgli, Clarence Williams and Rephael Edwards

February 16, 2017





Requirements Document

Exit Exam Preparation Application	1
Prepared by: Abdullah Alathel, Charith Perera, Christopher Gborgli, Clarence Williams and Rephael Edwards	1
1. Introduction	3
1.1 Purpose of the Document	3
1.2 Scope of Project	3
1.2.1 Main Objective	3
1.2.3 Specific Goals	3
1.3 Overview of Document	3
2. Users	4
2.1 Who are Users?	4
2.2 Use cases and Use case Diagrams	5
2.3 Scenarios	5
3. System	6
3.1 Development Environment	6
3.2 Target Environment	6
3.3 Functional Requirements	6
3.3.1 Issues	6
3.3.2 Major Classes Identified and Listed	6
3.3.3 Minor System Functions	6
3.4 Non Functional Requirements	7
3.4.1 User Interface Specification	7
3.4.2 Management	7
3.4.3 Technical	7
3.4.4 Performance	7
3.4.5 Security	7
3.6 System Evolution / Maintenance	7
4. Other Deliverables Required	7
5. Risks	8
6. Appendix	8
7. Glossary of Terms Used in this Document	8
8. References	8
1. Introduction 
1.1 Purpose of the Document
The purpose of the Software Requirement Specification Document is to outline the requirements for  Exit Exam Preparation Application that will be developed. It will also give the parameters and goals of the application. In this document a description will be given of the target audience, user interface, and the hardware and software requirements.
1.2 Scope of Project
The customer manages a committee that gives an exit exam for graduating Computer Science students. The customer would like to have a stand alone application that prepares students for the exam, by giving multiple choice questions and feedback based on a specific list of topics the students previously chose. The customer also wants the score of each student who finished to be delivered to her. This document describes how the Exit Exam Preparation Application that will be developed.
	1.2.1 Main Objective
	The software will enable senior computer science students to learn and to take practice tests on topics in preparation for the Exit Exam. The software will also give feedback on questions missed and an explanation for each question asked of the user so students will perform better on the actual exam. The software will be able to assist in uncovering weak areas that need further study and an opportunity to re-learn material. 
	1.2.3 Specific Goals
Create a graphical user interface (GUI)  for the user to view topics and questions and select answers.
Create an interface for the user to view the answer 
Create a database of questions, their answers and explanations
Create a way for the professor to be notified of the results from each session.
Create an option for users to choose the category of questions that they wish to practice.
1.3 Overview of Document
The remainder of the document is intended to inform stakeholders of the intended system.  Hardware and software requirements, users, both major and minor functions, non functional requirements, constraints, and the intended user interface are described.

2. Users 
2.1 Who are Users?

Our users will be students from Midwestern State University who need to take the exit exam in order to graduate. The users will choose from a set of answers presented in multiple choice form beneath the questions, while the questions themselves will be categorized and presented in sections. The program will present the grade the student achieved after the quiz is completed on the screen and will also email them their score.


2.2 Use cases and Use case Diagrams
Figure 1 below shows a Use Case Diagram involving the Student as an actor how he/she interacts with the system
	
Figure 1. Use Case Diagram involving student

Figure 2 below shows the use case diagram involving the Professor/admin as an actor and how he/she interacts with the system.


Figure 2. Use case diagram involving Professor/Admin
2.3 Scenarios
Table 1. Scenario Table	
#
Subject
Subject Action
Other Data/ Objects
Object Acted Upon


student
enters
Name, email
Sign in GUI


student
selects
Quiz type
Main GUI


student
answers
Question
Quiz GUI


student
clicks
Next button
Quiz GUII 


Quiz GUI
displays
Answer feedback
Quiz GUI


Results GUI
displays
Quiz results
Feedback GUI

3. System
3.1 Development Environment
Visual Studio IDE for programming 
SQL Database
Student PCs and Laptops using Windows
3.2 Target Environment
The development environment will be as follows:
Windows PC
Access to internet connection
MySQL Database software installed on a server
3.3 Functional Requirements
The system 
Must allow the user to select the number of questions to be asked at the start.
Must allow the user to select a category.
Must give the user a question to answer and allow them to select the correct answer.
Must give feedback for all questions answered. This includes if the question was answered correctly or incorrectly and an explanation of the answer for the question.
Must give output of the result of the exercise.
Must alert the professor about who did the activity, the time spent on it, when they did it and the results.
Must access questions and answers from a database.
	3.3.1 Issues
There are none recognized at the moment.
	3.3.2 Major Classes Identified and Listed
Sign in window
Main Window
Quiz Window
Questions Class
	3.3.3 Minor System Functions
Highlight the correct answer
Keep track of the user’s score
Keep track of the topics for which the students got correct and incorrect answers
3.4 Non Functional Requirements 
The system should randomly select questions for the student.
The system should offer a sign in page
The application should have a self explanatory user interface.
The system should send student results to the professor.
	3.4.1 User Interface Specification
The system should offer:
A sign in page
A practice quiz selection page
A practice quiz page
A form which provides links to videos for revision
A results page
3.4.2 Management
The system must be platform independent.
	3.4.3 Technical
Show the questions in a graphical interface
Deliver each user score to Dr.Halverson
The system must randomly choose a question from the database.
	3.4.4 Performance
The system must send results to the customer.
The application should provide feedback for each question
The system must not work with the actual software used to give the exam.
	3.4.5 Security
Since the system required is a stand alone, no login with password is needed
3.6 System Evolution / Maintenance
	The admin user will update the questions in the database each semester. 
4. Other Deliverables Required
At the end of the software development cycle, a project plan, requirements specification document, test plan, prototype, and user manual will be delivered to the professors of the Computer Science department at Midwestern State University.
5. Risks
Table 2. Risks
Risks
Probability
Impact
How to deal
Developers have little knowledge on SQL IDE 

Course load

Illness
 High



Medium

Medium
slow down development process.


Affect deadline

Deadline might be affected 
 Do online tutorials



Reduce course load

Make sure team members eat healthy and are inoculated

6. Appendix
Collaborators: 
Abdullah Alathel  a.alathel93@gmail.com 
Charith Perera charithp120@gmail.com 
Christopher Gborgli cagborgli0311@my.mwsu.edu 
Clarence Williams clarence.williams@csoweb.org 
Rephael Edwards rephie0000@gmail.com 

7. Glossary of Terms Used in this Document
EEprep - Exit Exam Preparation Application
	
GUI - Graphical User Interface
IDE- Integrated Development Environment
SQL - Structured Query Language
8. References 
"Easily Create All Types of UML Diagrams." UML Diagrams Online | Online UML Tool | UML Diagram Creator | Creately. N.p., n.d. Web. 07 Feb. 2017.

Halverson, Ranette, Ph.D. , Department of Computer Science, College of Science and Mathematics, Midwestern State University, Wichita Falls, Texas. 

